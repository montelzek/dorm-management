extend type Query {
    allResidents(page: Int, size: Int, search: String): ResidentPage!
    residentsByBuilding(buildingId: ID!, page: Int, size: Int, search: String): ResidentPage!
    availableRooms(buildingId: ID): [RoomPayload!]!
}

extend type Mutation {
    assignRoom(userId: ID!, roomId: ID!): ResidentPayload!
    deleteResident(userId: ID!): Boolean!
}

type ResidentPage {
    content: [ResidentPayload!]!
    totalElements: Int!
    totalPages: Int!
    currentPage: Int!
    pageSize: Int!
}

type ResidentPayload {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    phone: String!
    buildingName: String!
    buildingId: ID
    roomNumber: String!
    roomId: ID
}

type RoomPayload {
    id: ID!
    roomNumber: String!
    capacity: Int!
    currentOccupancy: Int!
    rentAmount: Float!
    buildingId: ID!
    buildingName: String!
}